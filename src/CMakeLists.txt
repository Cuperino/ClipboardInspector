# SPDX-License-Identifier: GPL-2.0-or-later
# SPDX-FileCopyrightText: 2022, 2025 Javier O. Cordero Pérez <javiercorderoperez@gmail.com>

#include(ECMPoQmTools)
#ecm_create_qm_loader(qprompt_QM_LOADER ../locale/qprompt.pot)


set(clipboardinspector_SRCS
    main.cpp
    document/documenthandler.cpp
)
set(clipboardinspector_HDRS
    document/documenthandler.h
)

set(qprompt_ASSETS
    resources.qrc
)

if (NOT APPLE AND NOT ANDROID)
    set(ICONS_FOLDER ${CMAKE_CURRENT_SOURCE_DIR}/icons/hicolor)
    set(RASTER_ICONS
        ${ICONS_FOLDER}/16-apps-com.cuperino.clipboardinspector.png
        ${ICONS_FOLDER}/32-apps-com.cuperino.clipboardinspector.png
        ${ICONS_FOLDER}/48-apps-com.cuperino.clipboardinspector.png
        ${ICONS_FOLDER}/64-apps-com.cuperino.clipboardinspector.png
        ${ICONS_FOLDER}/128-apps-com.cuperino.clipboardinspector.png
        ${ICONS_FOLDER}/256-apps-com.cuperino.clipboardinspector.png
        ${ICONS_FOLDER}/512-apps-com.cuperino.clipboardinspector.png
        # Commenting 1024 sized icon out because although ECM does support it, Flatpak does not...
        # ${ICONS_FOLDER}/1024-apps-com.cuperino.clipboardinspector.png
    )
    set(VECTOR_ICON
        ${ICONS_FOLDER}/sc-apps-com.cuperino.clipboardinspector.svg
    )
    ecm_install_icons(
        ICONS
            ${RASTER_ICONS}
            ${VECTOR_ICON}
        DESTINATION ${KDE_INSTALL_ICONDIR}
        # THEME hicolor
    )
    ecm_add_app_icon(clipboardinspector_ICONS
        ICONS ${RASTER_ICONS}
    )
endif()

## Qt5QuickCompiler is an optional dependency. Script must check that it is present before attempting to use
#if (Qt${QT_VERSION_MAJOR}QuickCompiler_FOUND)
    #qtquick_compiler_add_resources(clipboardinspector_QML_SRCS resources.qrc)
#else ()
set(clipboardinspector_QML_SRCS resources.qrc)
#endif()

if(ANDROID)
    add_library(${PROJECT_NAME}
        ${clipboardinspector_SRCS} ${clipboardinspector_HDRS} ${clipboardinspector_QML_SRCS})

elseif (WIN32)
    if (MSVC)
        add_definitions(-D_AFXDLL)
        set(CMAKE_MFC_FLAG 2)
    endif()
    add_executable(${PROJECT_NAME} WIN32
        ${clipboardinspector_SRCS} ${clipboardinspector_HDRS} ${clipboardinspector_QML_SRCS} ${clipboardinspector_ICONS})

elseif (APPLE)
    # These are substituted by CMake into plist.in.
    set(MACOSX_BUNDLE_DISPLAY_NAME "Clipboard Inspector")
    set(MACOSX_BUNDLE_INFO_PLIST ${CMAKE_CURRENT_SOURCE_DIR}/Info.plist.in)
    set(MACOSX_BUNDLE_GUI_IDENTIFIER "com.cuperino.clipboardinspector")
    set(MACOSX_BUNDLE_BUNDLE_NAME "ClipboardInspector")
    set(MACOSX_BUNDLE_INFO_STRING "Clipboard Inspector - Clipboard inspection app for efficient developers")
    set(MACOSX_BUNDLE_LONG_VERSION_STRING "Clipboard Inspector ${RELEASE_SERVICE_VERSION}")
    set(MACOSX_BUNDLE_SHORT_VERSION_STRING "${RELEASE_SERVICE_VERSION_MAJOR}.${RELEASE_SERVICE_VERSION_MINOR}")
    set(MACOSX_BUNDLE_BUNDLE_VERSION "${RELEASE_SERVICE_VERSION}")
    set(MACOSX_BUNDLE_COPYRIGHT "2022 Javier O. Cordero Pérez")
    # The MACOSX_BUNDLE_ICON_FILE variable is added to the Info.plist
    # generated by CMake. This variable contains the .icns file name,
    # without the path.
    set(MACOSX_BUNDLE_ICON_FILE "clipboardinspector.icns")
    # And the following tells CMake where to find and install the file itself.
    set(app_icon_macos "${CMAKE_CURRENT_SOURCE_DIR}/icons/clipboardinspector.icns")
    set_source_files_properties(${app_icon_macos} PROPERTIES MACOSX_PACKAGE_LOCATION "Resources")
    #
    add_executable(${PROJECT_NAME} MACOSX_BUNDLE
        ${clipboardinspector_SRCS} ${clipboardinspector_HDRS} ${clipboardinspector_QML_SRCS} ${clipboardinspector_ICONS} ${app_icon_macos})

else() # UNIX
    add_executable(${PROJECT_NAME}
        ${clipboardinspector_SRCS} ${clipboardinspector_HDRS} ${clipboardinspector_QML_SRCS} ${clipboardinspector_ICONS})
endif()

target_link_libraries(${PROJECT_NAME}
    Qt${QT_VERSION_MAJOR}::Core
    Qt${QT_VERSION_MAJOR}::Gui
    Qt${QT_VERSION_MAJOR}::Qml
    Qt${QT_VERSION_MAJOR}::Quick
    Qt${QT_VERSION_MAJOR}::QuickControls2
    Qt${QT_VERSION_MAJOR}::Svg
    KF6::CoreAddons
    KF6::Kirigami
    KF6SyntaxHighlighting
)

#if (KF5Crash_FOUND)
#    add_definitions(-DKF5Crash_FOUND)
#    target_link_libraries(${PROJECT_NAME} LINK_PRIVATE
#        KF5::Crash
#    )
#endif()

# Get static QML. Gets ignored if not a static build
#if (Qt5QmlImportScanner_FOUND)
#    qt5_import_qml_plugins(${PROJECT_NAME})
#endif()

if (WIN32 OR UNIX) # AND NOT ANDROID)
    # install(FILES images/clipboardinspector.svg DESTINATION ${KDE_INSTALL_FULL_ICONDIR}/hicolor/scalable/apps)
    # install(FILES images/clipboardinspector.png DESTINATION ${KDE_INSTALL_FULL_ICONDIR}/hicolor/1024x1024/apps)
    install(FILES com.cuperino.clipboardinspector.appdata.xml DESTINATION ${KDE_INSTALL_METAINFODIR})
    install(PROGRAMS com.cuperino.clipboardinspector.desktop DESTINATION ${KDE_INSTALL_APPDIR})
    if (APPLE)
        install(TARGETS ${PROJECT_NAME} ${KDE_INSTALL_TARGETS_DEFAULT_ARGS} BUNDLE DESTINATION .)
    else()
        install(TARGETS ${PROJECT_NAME} ${KDE_INSTALL_TARGETS_DEFAULT_ARGS})
    endif()
endif()
